{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/orders/page.tsx"],"sourcesContent":["\n'use client'; \n\nimport { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { MoreHorizontal } from \"lucide-react\"\nimport { \n  DropdownMenu, \n  DropdownMenuContent, \n  DropdownMenuItem, \n  DropdownMenuLabel, \n  DropdownMenuTrigger,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuPortal,\n} from \"@/components/ui/dropdown-menu\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Separator } from '@/components/ui/separator';\nimport type { Order } from '@/lib/types';\nimport { format } from 'date-fns';\nimport { useToast } from '@/hooks/use-toast';\n\nconst statusColors: { [key: string]: string } = {\n  Delivered: 'bg-green-500',\n  Processing: 'bg-yellow-500',\n  Shipped: 'bg-blue-500',\n  Cancelled: 'bg-red-500',\n};\n\nconst ORDER_STATUSES: Order['status'][] = ['Processing', 'Shipped', 'Delivered', 'Cancelled'];\n\nexport default function AdminOrdersPage() {\n    const [orders, setOrders] = useState<Order[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\n    const { toast } = useToast();\n\n    const fetchOrders = () => {\n        setIsLoading(true);\n        try {\n            const savedOrders = localStorage.getItem('bazaargoUserOrders');\n            if (savedOrders) {\n                const parsed = JSON.parse(savedOrders);\n                 if (Array.isArray(parsed)) {\n                    const parsedOrders: Order[] = parsed;\n                    parsedOrders.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n                    setOrders(parsedOrders);\n                 } else {\n                    setOrders([]); // Handle case where localStorage item is not an array\n                 }\n            } else {\n                setOrders([]); // Handle case where there is no item in localStorage\n            }\n        } catch (error) {\n            console.error(\"Failed to load orders from localStorage\", error);\n            toast({ variant: 'destructive', title: 'Error', description: 'Failed to load orders.' });\n            setOrders([]); // Reset on error\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        fetchOrders();\n    }, []);\n\n    const handleStatusChange = (orderId: string, newStatus: Order['status']) => {\n        try {\n            const savedOrders = localStorage.getItem('bazaargoUserOrders');\n            if (savedOrders) {\n                const parsed = JSON.parse(savedOrders);\n                 if (Array.isArray(parsed)) {\n                    let currentOrders: Order[] = parsed;\n                    const orderIndex = currentOrders.findIndex(o => o.id === orderId);\n\n                    if (orderIndex > -1) {\n                        currentOrders[orderIndex].status = newStatus;\n                        localStorage.setItem('bazaargoUserOrders', JSON.stringify(currentOrders));\n                        fetchOrders(); // Re-fetch and re-sort\n                        \n                        // Also update selectedOrder if it's the one being changed\n                        if (selectedOrder && selectedOrder.id === orderId) {\n                            setSelectedOrder(prev => prev ? { ...prev, status: newStatus } : null);\n                        }\n\n                        toast({ title: 'Status Updated', description: `Order status changed to ${newStatus}.` });\n                    }\n                }\n            }\n        } catch (error) {\n            console.error(\"Failed to update order status\", error);\n            toast({ variant: 'destructive', title: 'Error', description: 'Failed to update status.' });\n        }\n    };\n\n    if (isLoading) {\n        return <p>Loading orders...</p>;\n    }\n    \n    const subtotal = selectedOrder?.items.reduce((acc, item) => acc + item.price * item.quantity, 0) ?? 0;\n    const shipping = selectedOrder ? selectedOrder.total - subtotal : 0;\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>Orders</CardTitle>\n                <CardDescription>Manage customer orders here.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Table>\n                    <TableHeader>\n                        <TableRow>\n                            <TableHead>Order ID</TableHead>\n                            <TableHead>Customer</TableHead>\n                            <TableHead>Date</TableHead>\n                            <TableHead>Total</TableHead>\n                            <TableHead>Status</TableHead>\n                            <TableHead>Actions</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {orders.length > 0 ? orders.map((order) => (\n                            <TableRow key={order.id}>\n                                <TableCell className=\"font-medium\">#{order.id.slice(-6)}</TableCell>\n                                <TableCell>{order.shippingInfo.name}</TableCell>\n                                <TableCell>{format(new Date(order.date), \"PPP\")}</TableCell>\n                                <TableCell>৳{order.total.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</TableCell>\n                                <TableCell>\n                                    <Badge variant=\"outline\" className=\"flex items-center gap-2 w-fit\">\n                                        <span className={`h-2 w-2 rounded-full ${statusColors[order.status]}`}></span>\n                                        {order.status}\n                                    </Badge>\n                                </TableCell>\n                                <TableCell>\n                                     <DropdownMenu>\n                                        <DropdownMenuTrigger asChild>\n                                        <Button aria-haspopup=\"true\" size=\"icon\" variant=\"ghost\">\n                                            <MoreHorizontal className=\"h-4 w-4\" />\n                                            <span className=\"sr-only\">Toggle menu</span>\n                                        </Button>\n                                        </DropdownMenuTrigger>\n                                        <DropdownMenuContent align=\"end\">\n                                            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                                            <DropdownMenuItem onSelect={() => setSelectedOrder(order)}>View Details</DropdownMenuItem>\n                                            <DropdownMenuSub>\n                                                <DropdownMenuSubTrigger>Update Status</DropdownMenuSubTrigger>\n                                                <DropdownMenuPortal>\n                                                    <DropdownMenuSubContent>\n                                                        {ORDER_STATUSES.map(status => (\n                                                            <DropdownMenuItem \n                                                                key={status} \n                                                                onClick={() => handleStatusChange(order.id, status)}\n                                                                disabled={order.status === status}\n                                                            >\n                                                                {status}\n                                                            </DropdownMenuItem>\n                                                        ))}\n                                                    </DropdownMenuSubContent>\n                                                </DropdownMenuPortal>\n                                            </DropdownMenuSub>\n                                        </DropdownMenuContent>\n                                    </DropdownMenu>\n                                </TableCell>\n                            </TableRow>\n                        )) : (\n                            <TableRow>\n                                <TableCell colSpan={6} className=\"text-center\">No orders found.</TableCell>\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n\n                {selectedOrder && (\n                    <Dialog open={!!selectedOrder} onOpenChange={(isOpen) => !isOpen && setSelectedOrder(null)}>\n                        <DialogContent className=\"sm:max-w-3xl\">\n                            <DialogHeader>\n                                <DialogTitle>Order Details</DialogTitle>\n                                <DialogDescription>\n                                    Order #{selectedOrder.id.slice(-6)} &bull; Placed on {format(new Date(selectedOrder.date), \"PPP\")}\n                                </DialogDescription>\n                            </DialogHeader>\n                            <div className=\"grid gap-6 pt-4 max-h-[70vh] overflow-y-auto pr-6\">\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                    <div className=\"space-y-4\">\n                                        <h3 className=\"font-semibold\">Customer Information</h3>\n                                        <div className=\"text-sm text-muted-foreground space-y-1\">\n                                            <p><strong className=\"text-foreground\">Name:</strong> {selectedOrder.shippingInfo.name}</p>\n                                            <p><strong className=\"text-foreground\">Email:</strong> {selectedOrder.shippingInfo.email}</p>\n                                            <p><strong className=\"text-foreground\">Phone:</strong> {selectedOrder.shippingInfo.phone}</p>\n                                        </div>\n                                         <h3 className=\"font-semibold pt-2\">Shipping Address</h3>\n                                        <div className=\"text-sm text-muted-foreground\">\n                                            <p>{selectedOrder.shippingInfo.street}</p>\n                                            <p>{selectedOrder.shippingInfo.city}, {selectedOrder.shippingInfo.state} {selectedOrder.shippingInfo.zip}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"space-y-4\">\n                                        <h3 className=\"font-semibold\">Order Summary</h3>\n                                        <div className=\"text-sm space-y-2\">\n                                            <div className=\"flex justify-between\">\n                                                <span className=\"text-muted-foreground\">Subtotal</span>\n                                                <span>৳{subtotal.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\n                                            </div>\n                                             <div className=\"flex justify-between\">\n                                                <span className=\"text-muted-foreground\">Shipping</span>\n                                                <span>৳{shipping.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\n                                            </div>\n                                             <div className=\"flex justify-between font-bold text-base border-t pt-2 mt-2\">\n                                                <span>Total</span>\n                                                <span>৳{selectedOrder.total.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</span>\n                                            </div>\n                                            <div className=\"flex justify-between\">\n                                                <span className=\"text-muted-foreground\">Payment</span>\n                                                <span className=\"capitalize\">{selectedOrder.shippingInfo.paymentMethod}</span>\n                                            </div>\n                                            <div className=\"flex justify-between items-center\">\n                                                <span className=\"text-muted-foreground\">Status</span>\n                                                <Badge variant=\"outline\" className=\"flex items-center gap-2 w-fit\">\n                                                    <span className={`h-2 w-2 rounded-full ${statusColors[selectedOrder.status]}`}></span>\n                                                    {selectedOrder.status}\n                                                </Badge>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Separator />\n                                <div>\n                                    <h3 className=\"font-semibold mb-4\">Items Ordered</h3>\n                                    <div className=\"space-y-4\">\n                                        {selectedOrder.items.map(item => (\n                                            <div key={`${item.id}-${item.selectedSize}-${item.selectedColor.name}`} className=\"flex items-center gap-4\">\n                                                <Image src={item.images[0]} alt={item.name} width={64} height={64} className=\"rounded-md border aspect-square object-cover\" />\n                                                <div className=\"flex-grow\">\n                                                    <p className=\"font-medium\">{item.name}</p>\n                                                    <p className=\"text-sm text-muted-foreground\">{item.selectedSize} / {item.selectedColor.name}</p>\n                                                    <p className=\"text-sm text-muted-foreground\">Qty: {item.quantity}</p>\n                                                </div>\n                                                <p className=\"ml-auto font-medium\">৳{(item.price * item.quantity).toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</p>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                            </div>\n                            <DialogFooter>\n                                <Button variant=\"outline\" onClick={() => setSelectedOrder(null)}>Close</Button>\n                            </DialogFooter>\n                        </DialogContent>\n                    </Dialog>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}