{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/product-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useForm, useFieldArray, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useRouter } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useToast } from '@/hooks/use-toast';\nimport { initialCategories } from '@/lib/data';\nimport type { Product, Category } from '@/lib/types';\nimport { Loader2, Trash2, PlusCircle } from 'lucide-react';\nimport { products as initialProducts } from '@/lib/data';\n\nconst PRODUCTS_KEY = 'appProducts';\nconst CATEGORIES_KEY = 'appCategories';\n\nconst productSchema = z.object({\n  name: z.string().min(3, { message: 'Product name must be at least 3 characters.' }),\n  shortDescription: z.string().optional(),\n  longDescription: z.string().optional(),\n  price: z.coerce.number().min(0, { message: 'Price must be a positive number.' }),\n  stock: z.coerce.number().min(0, { message: 'Stock must be a positive number.' }),\n  category: z.string().min(1, { message: 'Please select a category.' }),\n  brand: z.string().min(2, { message: 'Brand is required.' }),\n  images: z.array(z.object({ value: z.string().url({ message: \"Please enter a valid URL.\" }) })).min(1, \"At least one image is required.\"),\n  sizes: z.array(z.object({ value: z.string().min(1, \"Size cannot be empty.\") })).optional(),\n  tags: z.array(z.object({ value: z.string().min(1, \"Tag cannot be empty.\") })).optional(),\n  colors: z.array(z.object({\n    name: z.string().min(1, \"Color name cannot be empty.\"),\n    hex: z.string().regex(/^#[0-9a-fA-F]{6}$/, \"Must be a valid hex code (e.g., #RRGGBB).\"),\n    image: z.string().url({ message: \"Please enter a valid URL.\" }).optional().or(z.literal('')),\n  })).optional(),\n});\n\ntype ProductFormValues = z.infer<typeof productSchema>;\n\ninterface ProductFormProps {\n    productId?: string;\n}\n\nexport function ProductForm({ productId }: ProductFormProps) {\n    const router = useRouter();\n    const { toast } = useToast();\n    const [isLoading, setIsLoading] = useState(false);\n    const [isFetching, setIsFetching] = useState(true);\n    const [categories, setCategories] = useState<Category[]>([]);\n\n    const isEditMode = !!productId;\n\n    const form = useForm<ProductFormValues>({\n        resolver: zodResolver(productSchema),\n        defaultValues: {\n            name: '',\n            shortDescription: '',\n            longDescription: '',\n            price: 0,\n            stock: 0,\n            category: '',\n            brand: '',\n            images: [],\n            sizes: [],\n            tags: [],\n            colors: [],\n        },\n    });\n\n    const { fields: imageFields, append: appendImage, remove: removeImage } = useFieldArray({ control: form.control, name: \"images\" });\n    const { fields: sizeFields, append: appendSize, remove: removeSize } = useFieldArray({ control: form.control, name: \"sizes\" });\n    const { fields: tagFields, append: appendTag, remove: removeTag } = useFieldArray({ control: form.control, name: \"tags\" });\n    const { fields: colorFields, append: appendColor, remove: removeColor } = useFieldArray({ control: form.control, name: \"colors\" });\n\n    useEffect(() => {\n      try {\n        const savedCategoriesJSON = localStorage.getItem(CATEGORIES_KEY);\n        if (savedCategoriesJSON) {\n            setCategories(JSON.parse(savedCategoriesJSON));\n        } else {\n            setCategories(initialCategories);\n        }\n      } catch (e) {\n        setCategories(initialCategories);\n      }\n\n        if (isEditMode) {\n            try {\n                const savedProducts = localStorage.getItem(PRODUCTS_KEY);\n                const products: Product[] = savedProducts ? JSON.parse(savedProducts) : initialProducts;\n                const productToEdit = products.find(p => p.id === productId);\n\n                if (productToEdit) {\n                    form.reset({\n                        name: productToEdit.name,\n                        shortDescription: productToEdit.shortDescription,\n                        longDescription: productToEdit.longDescription,\n                        price: productToEdit.price,\n                        stock: productToEdit.stock,\n                        category: productToEdit.category,\n                        brand: productToEdit.brand,\n                        images: productToEdit.images.map(val => ({ value: val })),\n                        sizes: productToEdit.sizes?.map(val => ({ value: val })),\n                        tags: productToEdit.tags?.map(val => ({ value: val })),\n                        colors: productToEdit.colors?.map(val => ({ name: val.name, hex: val.hex, image: val.image || '' })),\n                    });\n                } else {\n                    toast({ variant: 'destructive', title: 'Product not found' });\n                    router.push('/admin/products');\n                }\n            } catch(e) {\n                 toast({ variant: 'destructive', title: 'Failed to load product' });\n            } finally {\n                setIsFetching(false);\n            }\n        } else {\n            form.reset({\n                name: '',\n                shortDescription: '',\n                longDescription: '',\n                price: 0,\n                stock: 0,\n                category: '',\n                brand: '',\n                images: [{value: ''}],\n                sizes: [],\n                tags: [],\n                colors: [],\n            });\n            setIsFetching(false);\n        }\n    }, [productId, isEditMode, form, router, toast]);\n\n    const onSubmit = (data: ProductFormValues) => {\n        setIsLoading(true);\n\n        const transformedData = {\n            name: data.name,\n            shortDescription: data.shortDescription || '',\n            longDescription: data.longDescription || '',\n            price: data.price,\n            stock: data.stock,\n            category: data.category,\n            brand: data.brand,\n            images: data.images.map(i => i.value),\n            sizes: data.sizes ? data.sizes.map(s => s.value) : [],\n            tags: data.tags ? data.tags.map(t => t.value) : [],\n            colors: data.colors ? data.colors.map(c => ({...c, image: c.image || undefined })) : [],\n        };\n        \n        try {\n            const savedProductsJSON = localStorage.getItem(PRODUCTS_KEY);\n            let products: Product[] = [];\n            if (savedProductsJSON) {\n                try {\n                    const parsed = JSON.parse(savedProductsJSON);\n                    if (Array.isArray(parsed)) {\n                        products = parsed;\n                    }\n                } catch (e) {\n                    console.error(\"Could not parse products from localStorage, starting with a new list.\", e);\n                }\n            }\n\n            if (isEditMode) {\n                const productIndex = products.findIndex(p => p.id === productId);\n                if (productIndex !== -1) {\n                    products[productIndex] = { \n                        ...products[productIndex], \n                        ...transformedData \n                    };\n                }\n            } else {\n                const newProduct: Product = {\n                    ...transformedData,\n                    id: `p${new Date().getTime()}`,\n                    rating: Math.round((Math.random() * 1.5 + 3.5) * 10) / 10,\n                    reviewCount: Math.floor(Math.random() * 200) + 20,\n                    createdAt: new Date().toISOString(),\n                };\n                products.push(newProduct);\n            }\n\n            localStorage.setItem(PRODUCTS_KEY, JSON.stringify(products));\n            toast({\n                title: isEditMode ? 'Product Updated' : 'Product Created',\n                description: `Product \"${data.name}\" has been successfully saved.`,\n            });\n            router.push('/admin/products');\n        } catch (error) {\n            toast({ variant: 'destructive', title: 'An error occurred', description: 'Could not save the product.' });\n            console.error(error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n    if (isFetching) {\n        return <p>Loading form...</p>;\n    }\n\n    const renderArrayField = (label: string, fields: any[], removeFn: Function, appendFn: Function, placeholder: string, fieldName: string) => (\n      <div className=\"space-y-2\">\n          <Label>{label}</Label>\n          {fields.map((field, index) => (\n              <div key={field.id} className=\"flex items-center gap-2\">\n                  <FormField\n                      control={form.control}\n                      name={`${fieldName}.${index}.value` as const}\n                      render={({ field }) => (\n                          <FormItem className=\"flex-grow\">\n                              <FormControl>\n                                  <Input placeholder={placeholder} {...field} />\n                              </FormControl>\n                              <FormMessage />\n                          </FormItem>\n                      )}\n                  />\n                  <Button type=\"button\" variant=\"destructive\" size=\"icon\" onClick={() => removeFn(index)}>\n                      <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n              </div>\n          ))}\n          <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => appendFn({ value: '' })}>\n              <PlusCircle className=\"mr-2 h-4 w-4\" /> Add {label.slice(0, -1)}\n          </Button>\n      </div>\n    );\n\n    return (\n        <div className=\"max-w-5xl mx-auto\">\n            <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)}>\n                    <div className=\"space-y-8\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle>{isEditMode ? 'Edit Product' : 'Add New Product'}</CardTitle>\n                                <CardDescription>Fill in the details for the product.</CardDescription>\n                            </CardHeader>\n                            <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                               <FormField\n                                    control={form.control}\n                                    name=\"name\"\n                                    render={({ field }) => (\n                                        <FormItem className=\"md:col-span-2\">\n                                            <FormLabel>Product Name</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                <FormField\n                                    control={form.control}\n                                    name=\"shortDescription\"\n                                    render={({ field }) => (\n                                        <FormItem className=\"md:col-span-2\">\n                                            <FormLabel>Short Description (Optional)</FormLabel>\n                                            <FormControl><Textarea {...field} rows={3} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                 <FormField\n                                    control={form.control}\n                                    name=\"longDescription\"\n                                    render={({ field }) => (\n                                        <FormItem className=\"md:col-span-2\">\n                                            <FormLabel>Long Description (Optional, HTML Supported)</FormLabel>\n                                            <FormControl><Textarea {...field} rows={8} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                <FormField\n                                    control={form.control}\n                                    name=\"price\"\n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Price</FormLabel>\n                                            <FormControl><Input type=\"number\" step=\"0.01\" {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                 <FormField\n                                    control={form.control}\n                                    name=\"stock\"\n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Stock Quantity</FormLabel>\n                                            <FormControl><Input type=\"number\" {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                 <FormField\n                                    control={form.control}\n                                    name=\"category\"\n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Category</FormLabel>\n                                            <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                                <FormControl>\n                                                    <SelectTrigger><SelectValue placeholder=\"Select a category\" /></SelectTrigger>\n                                                </FormControl>\n                                                <SelectContent>\n                                                    {categories.map(cat => <SelectItem key={cat.id} value={cat.id}>{cat.name}</SelectItem>)}\n                                                </SelectContent>\n                                            </Select>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                                <FormField\n                                    control={form.control}\n                                    name=\"brand\"\n                                    render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Brand</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )}\n                                />\n                            </CardContent>\n                        </Card>\n\n                         <Card>\n                            <CardHeader><CardTitle>Attributes</CardTitle></CardHeader>\n                            <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                {renderArrayField(\"Images\", imageFields, removeImage, appendImage, \"https://example.com/image.png\", \"images\")}\n                                {renderArrayField(\"Sizes\", sizeFields, removeSize, appendSize, \"e.g., M\", \"sizes\")}\n                                {renderArrayField(\"Tags\", tagFields, removeTag, appendTag, \"e.g., new\", \"tags\")}\n\n                                <div className=\"space-y-4\">\n                                    <Label>Colors</Label>\n                                    {colorFields.map((field, index) => (\n                                        <div key={field.id} className=\"p-4 border rounded-md space-y-4\">\n                                            <div className=\"flex items-center gap-2\">\n                                                <FormField\n                                                    control={form.control}\n                                                    name={`colors.${index}.name`}\n                                                    render={({ field }) => (\n                                                        <FormItem className=\"flex-grow\">\n                                                            <FormLabel>Name</FormLabel>\n                                                            <FormControl><Input placeholder=\"Color Name\" {...field} /></FormControl>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                                <FormField\n                                                    control={form.control}\n                                                    name={`colors.${index}.hex`}\n                                                    render={({ field }) => (\n                                                        <FormItem className=\"flex-grow\">\n                                                             <FormLabel>Hex</FormLabel>\n                                                            <FormControl><Input placeholder=\"#000000\" {...field} /></FormControl>\n                                                            <FormMessage />\n                                                        </FormItem>\n                                                    )}\n                                                />\n                                                <Button type=\"button\" variant=\"destructive\" size=\"icon\" onClick={() => removeColor(index)} className=\"self-end\">\n                                                    <Trash2 className=\"h-4 w-4\" />\n                                                </Button>\n                                            </div>\n                                             <FormField\n                                                control={form.control}\n                                                name={`colors.${index}.image`}\n                                                render={({ field }) => (\n                                                    <FormItem>\n                                                         <FormLabel>Image URL (Optional)</FormLabel>\n                                                        <FormControl><Input placeholder=\"Image URL for this color\" {...field} /></FormControl>\n                                                        <FormMessage />\n                                                    </FormItem>\n                                                )}\n                                            />\n                                        </div>\n                                    ))}\n                                    <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => appendColor({ name: '', hex: '#000000', image: '' })}>\n                                        <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Color\n                                    </Button>\n                                </div>\n                            </CardContent>\n                        </Card>\n\n                        <div className=\"flex justify-end\">\n                            <Button type=\"submit\" disabled={isLoading} size=\"lg\">\n                                {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                                {isEditMode ? 'Save Changes' : 'Create Product'}\n                            </Button>\n                        </div>\n                    </div>\n                </form>\n            </Form>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1423, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/products/edit/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\nimport { ProductForm } from '@/components/admin/product-form';\nimport { useParams } from 'next/navigation';\n\nexport default function EditProductPage() {\n    const params = useParams();\n    const id = params.id as string;\n    return (\n        <div className=\"max-w-5xl mx-auto\">\n            <ProductForm productId={id} />\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACpB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,KAAK,OAAO,EAAE;IACpB,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,8IAAA,CAAA,cAAW;YAAC,WAAW;;;;;;;;;;;AAGpC","debugId":null}}]
}