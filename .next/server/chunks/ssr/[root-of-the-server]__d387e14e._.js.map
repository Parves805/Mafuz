{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport { config } from 'dotenv';\n\nconfig(); // Load environment variables from .env file\n\nconst plugins = [];\nconst apiKey = process.env.GOOGLE_API_KEY;\n\nif (apiKey) {\n  plugins.push(googleAI({ apiKey }));\n} else {\n  // This warning will appear in the server console if the key is missing.\n  console.warn(\"\\n[BazaarGo] WARNING: GOOGLE_API_KEY is not set.\");\n  console.warn(\"[BazaarGo] AI features like product recommendations will be disabled.\");\n  console.warn(\"[BazaarGo] Get a key from https://aistudio.google.com/app/apikey and add it to your .env file.\\n\");\n}\n\nexport const ai = genkit({\n  plugins,\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;AACA;;;;AAEA,CAAA,GAAA,qIAAA,CAAA,SAAM,AAAD,KAAK,4CAA4C;AAEtD,MAAM,UAAU,EAAE;AAClB,MAAM,SAAS,QAAQ,GAAG,CAAC,cAAc;AAEzC,IAAI,QAAQ;IACV,QAAQ,IAAI,CAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;IAAO;AACjC,OAAO;IACL,wEAAwE;IACxE,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;AACf;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/product-recommendations.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview AI agent that recommends products based on viewing history.\n *\n * - getProductRecommendations - A function that handles the product recommendation process.\n * - GetProductRecommendationsInput - The input type for the getProductRecommendations function.\n * - GetProductRecommendationsResult - The return type for the getProductRecommendations function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ProductInfoSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  shortDescription: z.string().optional(),\n  category: z.string(),\n});\n\nconst GetProductRecommendationsInputSchema = z.object({\n  viewedProducts: z\n    .array(ProductInfoSchema)\n    .describe('An array of products the user has recently viewed.'),\n  allProducts: z\n    .array(ProductInfoSchema)\n    .describe('The complete catalog of products available for recommendation.'),\n  numberOfRecommendations: z\n    .number()\n    .default(6)\n    .describe('The number of product recommendations to return.'),\n});\nexport type GetProductRecommendationsInput = z.infer<\n  typeof GetProductRecommendationsInputSchema\n>;\n\nconst GetProductRecommendationsOutputSchema = z.object({\n  recommendedProducts: z\n    .array(z.string())\n    .describe('An array of product IDs representing the recommended products.'),\n});\nexport type GetProductRecommendationsOutput = z.infer<\n  typeof GetProductRecommendationsOutputSchema\n>;\n\n// New type for the safe wrapper function\nexport type GetProductRecommendationsResult = {\n  recommendedProducts: string[] | null;\n  error: string | null;\n};\n\n\nexport async function getProductRecommendations(\n  input: GetProductRecommendationsInput\n): Promise<GetProductRecommendationsResult> {\n  try {\n    const result = await getProductRecommendationsFlow(input);\n    return { recommendedProducts: result.recommendedProducts, error: null };\n  } catch (e: any) {\n    console.error(\"[BazaarGo AI] Error in getProductRecommendationsFlow:\", e.message);\n    let errorMessage = 'An unexpected error occurred while generating recommendations.';\n    if (e.message?.includes('API_KEY_INVALID') || e.message?.includes('Api key not valid')) {\n        errorMessage = 'The Google AI API key is missing or invalid. Please check your .env file to enable AI features.';\n    } else if (e.message?.includes('No model found')) {\n        errorMessage = 'The AI model is not configured. This is likely because the GOOGLE_API_KEY is missing from your .env file.';\n    } else if (e.message?.includes('429')) {\n        errorMessage = 'The AI service is currently busy. Please try again in a few moments.';\n    }\n    return { recommendedProducts: null, error: errorMessage };\n  }\n}\n\nconst productRecommendationsPrompt = ai.definePrompt({\n  name: 'productRecommendationsPrompt',\n  input: {schema: GetProductRecommendationsInputSchema},\n  output: {schema: GetProductRecommendationsOutputSchema},\n  prompt: `You are an expert product recommendation engine for an e-commerce store specializing in men's apparel.\n\nBased on the products the user has recently viewed, you must recommend a list of other products from the full catalog that they might be interested in.\n\nRULES:\n- DO NOT recommend products that are already in the user's viewing history.\n- Recommend exactly {{numberOfRecommendations}} products.\n- Return ONLY the product IDs in the 'recommendedProducts' array.\n- Prioritize recommending products from similar categories (e.g., if the user viewed t-shirts, recommend other t-shirts or polos).\n\nUSER'S VIEWING HISTORY:\n{{#each viewedProducts}}\n- ID: {{id}}, Name: {{name}}, Category: {{category}}, Short Description: {{shortDescription}}\n{{/each}}\n\nFULL PRODUCT CATALOG (for you to choose from):\n{{#each allProducts}}\n- ID: {{id}}, Name: {{name}}, Category: {{category}}\n{{/each}}\n`,\n});\n\nconst getProductRecommendationsFlow = ai.defineFlow(\n  {\n    name: 'getProductRecommendationsFlow',\n    inputSchema: GetProductRecommendationsInputSchema,\n    outputSchema: GetProductRecommendationsOutputSchema,\n  },\n  async input => {\n    // Filter out viewed products from the recommendation pool\n    const viewedProductIds = new Set(input.viewedProducts.map(p => p.id));\n    const availableProductsToRecommend = input.allProducts.filter(\n      p => !viewedProductIds.has(p.id)\n    );\n\n    const {output} = await productRecommendationsPrompt({\n        ...input,\n        allProducts: availableProductsToRecommend\n    });\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAEA,MAAM,uCAAuC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpD,gBAAgB,uIAAA,CAAA,IAAC,CACd,KAAK,CAAC,mBACN,QAAQ,CAAC;IACZ,aAAa,uIAAA,CAAA,IAAC,CACX,KAAK,CAAC,mBACN,QAAQ,CAAC;IACZ,yBAAyB,uIAAA,CAAA,IAAC,CACvB,MAAM,GACN,OAAO,CAAC,GACR,QAAQ,CAAC;AACd;AAKA,MAAM,wCAAwC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,qBAAqB,uIAAA,CAAA,IAAC,CACnB,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAYO,eAAe,0BACpB,KAAqC;IAErC,IAAI;QACF,MAAM,SAAS,MAAM,8BAA8B;QACnD,OAAO;YAAE,qBAAqB,OAAO,mBAAmB;YAAE,OAAO;QAAK;IACxE,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,yDAAyD,EAAE,OAAO;QAChF,IAAI,eAAe;QACnB,IAAI,EAAE,OAAO,EAAE,SAAS,sBAAsB,EAAE,OAAO,EAAE,SAAS,sBAAsB;YACpF,eAAe;QACnB,OAAO,IAAI,EAAE,OAAO,EAAE,SAAS,mBAAmB;YAC9C,eAAe;QACnB,OAAO,IAAI,EAAE,OAAO,EAAE,SAAS,QAAQ;YACnC,eAAe;QACnB;QACA,OAAO;YAAE,qBAAqB;YAAM,OAAO;QAAa;IAC1D;AACF;AAEA,MAAM,+BAA+B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACnD,MAAM;IACN,OAAO;QAAC,QAAQ;IAAoC;IACpD,QAAQ;QAAC,QAAQ;IAAqC;IACtD,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;AAmBX,CAAC;AACD;AAEA,MAAM,gCAAgC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACjD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,0DAA0D;IAC1D,MAAM,mBAAmB,IAAI,IAAI,MAAM,cAAc,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,EAAE;IACnE,MAAM,+BAA+B,MAAM,WAAW,CAAC,MAAM,CAC3D,CAAA,IAAK,CAAC,iBAAiB,GAAG,CAAC,EAAE,EAAE;IAGjC,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,6BAA6B;QAChD,GAAG,KAAK;QACR,aAAa;IACjB;IACA,OAAO;AACT;;;IAhEoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getProductRecommendations as '409e8c26d0758e2c66003b734dfe0090830ad6e629'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}