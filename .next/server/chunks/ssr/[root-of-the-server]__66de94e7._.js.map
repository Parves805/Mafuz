{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport { config } from 'dotenv';\n\nconfig(); // Load environment variables from .env file\n\nconst plugins = [];\nconst apiKey = process.env.GOOGLE_API_KEY;\n\nif (apiKey) {\n  plugins.push(googleAI({ apiKey }));\n} else {\n  // This warning will appear in the server console if the key is missing.\n  console.warn(\"\\n[BazaarGo] WARNING: GOOGLE_API_KEY is not set.\");\n  console.warn(\"[BazaarGo] AI features like product recommendations will be disabled.\");\n  console.warn(\"[BazaarGo] Get a key from https://aistudio.google.com/app/apikey and add it to your .env file.\\n\");\n}\n\nexport const ai = genkit({\n  plugins,\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;AACA;;;;AAEA,CAAA,GAAA,qIAAA,CAAA,SAAM,AAAD,KAAK,4CAA4C;AAEtD,MAAM,UAAU,EAAE;AAClB,MAAM,SAAS,QAAQ,GAAG,CAAC,cAAc;AAEzC,IAAI,QAAQ;IACV,QAAQ,IAAI,CAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;IAAO;AACjC,OAAO;IACL,wEAAwE;IACxE,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;AACf;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-order-email.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI flow to generate an HTML order confirmation email.\n *\n * - generateOrderConfirmationEmail - A function that generates the email content.\n * - GenerateOrderEmailInput - The input type for the function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport type { Order } from '@/lib/types';\n\nconst CartItemSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  images: z.array(z.string()),\n  price: z.number(),\n  quantity: z.number(),\n  selectedSize: z.string().optional(),\n  selectedColor: z.object({ name: z.string(), hex: z.string() }).optional(),\n});\n\nconst ShippingInfoSchema = z.object({\n  name: z.string(),\n  email: z.string(),\n  phone: z.string(),\n  street: z.string(),\n  city: z.string(),\n  state: z.string(),\n  zip: z.string(),\n  paymentMethod: z.string(),\n});\n\nconst OrderSchema = z.object({\n  id: z.string(),\n  date: z.string(),\n  items: z.array(CartItemSchema),\n  total: z.number(),\n  status: z.string(),\n  shippingInfo: ShippingInfoSchema,\n});\n\nconst GenerateOrderEmailInputSchema = z.object({\n  order: OrderSchema,\n});\nexport type GenerateOrderEmailInput = z.infer<typeof GenerateOrderEmailInputSchema>;\n\n\nexport async function generateOrderConfirmationEmail(input: GenerateOrderEmailInput): Promise<string> {\n  const result = await generateOrderEmailFlow(input);\n  return result;\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateOrderEmailPrompt',\n  input: { schema: GenerateOrderEmailInputSchema },\n  output: { format: 'text' },\n  prompt: `\nYou are an expert email designer for an e-commerce store called \"BazaarGo\".\nYour task is to generate a professional, modern, and clean HTML order confirmation email based on the provided order details.\n\n**Instructions:**\n1.  **Use Inline CSS:** All styles must be inline CSS for maximum compatibility with email clients. Do not use <style> blocks.\n2.  **Professional Tone:** The email should be friendly, professional, and reassuring.\n3.  **Clear Structure:** The email should have a clear header, order summary, customer details, and footer.\n4.  **Order Summary Table:** Create a table for the ordered items with columns for Image, Product, Quantity, and Price.\n5.  **Totals Section:** Clearly display the subtotal, shipping cost, and the final total.\n6.  **Responsive Design:** Use a single-column layout that works well on both desktop and mobile. Use a container with a max-width of 600px.\n7.  **Brand Colors:** Use BazaarGo's brand colors: Primary: #F26522, Background: #F9EBE1, Text: #333333.\n8.  **Do NOT include any placeholders.** Generate the full, complete HTML.\n9.  **Date Formatting:** Format the order date nicely (e.g., July 20, 2024).\n10. **Currency:** The currency is Bangladeshi Taka (৳). Ensure you use the '৳' symbol before all prices.\n\n**Order Details (JSON):**\n\\`\\`\\`json\n{{{jsonStringify order}}}\n\\`\\`\\`\n\nGenerate ONLY the HTML code for the email. Do not add any extra text or explanations before or after the HTML block.\n`,\n});\n\nconst generateOrderEmailFlow = ai.defineFlow(\n  {\n    name: 'generateOrderEmailFlow',\n    inputSchema: GenerateOrderEmailInputSchema,\n    outputSchema: z.string(),\n  },\n  async (input) => {\n    // We need to pass the order object as a string to the prompt\n    // because Handlebars can't handle complex nested objects and arrays directly.\n    const orderWithSubtotal = {\n        ...input.order,\n        subtotal: input.order.items.reduce((acc, item) => acc + item.price * item.quantity, 0),\n        shipping: input.order.total - input.order.items.reduce((acc, item) => acc + item.price * item.quantity, 0)\n    };\n\n    const { text } = await prompt({\n        order: orderWithSubtotal,\n        jsonStringify: (obj: any) => JSON.stringify(obj, null, 2),\n    });\n    return text;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;CAKC,GAED;AACA;AAAA;;;;;;AAGA,MAAM,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9B,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,QAAQ,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM;IACxB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;IACf,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACjC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;QAAI,KAAK,uIAAA,CAAA,IAAC,CAAC,MAAM;IAAG,GAAG,QAAQ;AACzE;AAEA,MAAM,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;IACf,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;IACf,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;IACf,KAAK,uIAAA,CAAA,IAAC,CAAC,MAAM;IACb,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM;AACzB;AAEA,MAAM,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3B,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,OAAO,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;IACf,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;IACf,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,cAAc;AAChB;AAEA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,OAAO;AACT;AAIO,eAAe,+BAA+B,KAA8B;IACjF,MAAM,SAAS,MAAM,uBAAuB;IAC5C,OAAO;AACT;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAA8B;IAC/C,QAAQ;QAAE,QAAQ;IAAO;IACzB,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;AAsBX,CAAC;AACD;AAEA,MAAM,yBAAyB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC1C;IACE,MAAM;IACN,aAAa;IACb,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM;AACxB,GACA,OAAO;IACL,6DAA6D;IAC7D,8EAA8E;IAC9E,MAAM,oBAAoB;QACtB,GAAG,MAAM,KAAK;QACd,UAAU,MAAM,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE;QACpF,UAAU,MAAM,KAAK,CAAC,KAAK,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,GAAG,KAAK,QAAQ,EAAE;IAC5G;IAEA,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,OAAO;QAC1B,OAAO;QACP,eAAe,CAAC,MAAa,KAAK,SAAS,CAAC,KAAK,MAAM;IAC3D;IACA,OAAO;AACT;;;IAtDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/checkout/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateOrderConfirmationEmail as '406b970799c04dc790d1f78c172ed170e29f509085'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/checkout/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/checkout/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/checkout/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/checkout/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/checkout/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/checkout/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}