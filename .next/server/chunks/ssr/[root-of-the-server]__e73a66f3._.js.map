{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport { config } from 'dotenv';\n\nconfig(); // Load environment variables from .env file\n\nconst plugins = [];\nconst apiKey = process.env.GOOGLE_API_KEY;\n\nif (apiKey) {\n  plugins.push(googleAI({ apiKey }));\n} else {\n  // This warning will appear in the server console if the key is missing.\n  console.warn(\"\\n[BazaarGo] WARNING: GOOGLE_API_KEY is not set.\");\n  console.warn(\"[BazaarGo] AI features like product recommendations will be disabled.\");\n  console.warn(\"[BazaarGo] Get a key from https://aistudio.google.com/app/apikey and add it to your .env file.\\n\");\n}\n\nexport const ai = genkit({\n  plugins,\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;AACA;;;;AAEA,CAAA,GAAA,qIAAA,CAAA,SAAM,AAAD,KAAK,4CAA4C;AAEtD,MAAM,UAAU,EAAE;AAClB,MAAM,SAAS,QAAQ,GAAG,CAAC,cAAc;AAEzC,IAAI,QAAQ;IACV,QAAQ,IAAI,CAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;IAAO;AACjC,OAAO;IACL,wEAAwE;IACxE,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;AACf;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-status-update-email.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI flow to generate an HTML order status update email.\n *\n * - generateStatusUpdateEmail - A function that generates the email content for a status update.\n * - GenerateStatusUpdateEmailInput - The input type for the function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport type { Order } from '@/lib/types';\n\nconst CartItemSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  images: z.array(z.string()),\n  price: z.number(),\n  quantity: z.number(),\n  selectedSize: z.string().optional(),\n  selectedColor: z.object({ name: z.string(), hex: z.string() }).optional(),\n});\n\nconst ShippingInfoSchema = z.object({\n  name: z.string(),\n  email: z.string(),\n  phone: z.string(),\n  street: z.string(),\n  city: z.string(),\n  state: z.string(),\n  zip: z.string(),\n  paymentMethod: z.string(),\n});\n\nconst OrderSchema = z.object({\n  id: z.string(),\n  date: z.string(),\n  items: z.array(CartItemSchema),\n  total: z.number(),\n  status: z.string(),\n  shippingInfo: ShippingInfoSchema,\n});\n\nconst GenerateStatusUpdateEmailInputSchema = z.object({\n  order: OrderSchema,\n  newStatus: z.string(),\n});\nexport type GenerateStatusUpdateEmailInput = z.infer<typeof GenerateStatusUpdateEmailInputSchema>;\n\n\nexport async function generateStatusUpdateEmail(input: GenerateStatusUpdateEmailInput): Promise<string> {\n  const result = await generateStatusUpdateEmailFlow(input);\n  return result;\n}\n\nconst statusUpdateMessages = {\n    Processing: {\n        subject: \"We're working on your order!\",\n        title: \"Your Order is Being Processed\",\n        message: \"We have successfully received your order and are currently processing it. We'll let you know as soon as it ships.\"\n    },\n    Shipped: {\n        subject: \"Your order has shipped!\",\n        title: \"Your Order is on its Way!\",\n        message: \"Good news! Your order has been shipped and is now on its way to you. You can expect it to arrive soon.\"\n    },\n    Delivered: {\n        subject: \"Your order has been delivered!\",\n        title: \"Your Order Has Arrived!\",\n        message: \"Your order has been successfully delivered. We hope you enjoy your new items! Thank you for shopping with us.\"\n    },\n    Cancelled: {\n        subject: \"Your order has been cancelled\",\n        title: \"Your Order Has Been Cancelled\",\n        message: \"As per your request, we have cancelled your order. If you have any questions, please don't hesitate to contact our support team.\"\n    }\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateStatusUpdateEmailPrompt',\n  input: { schema: z.object({ \n    newStatus: z.string(), \n    orderJson: z.string(),\n    subject: z.string(),\n    title: z.string(),\n    message: z.string(),\n  }) },\n  output: { format: 'text' },\n  prompt: `\nYou are an expert email designer for an e-commerce store called \"BazaarGo\".\nYour task is to generate a professional, modern, and clean HTML order status update email.\n\nThe new status for the order is: **{{newStatus}}**.\n\nUse the following information to tailor the email content:\n- **Subject Line:** {{subject}}\n- **Email Title:** {{title}}\n- **Main Message:** {{message}}\n\n**Instructions:**\n1.  **Use Inline CSS:** All styles must be inline CSS for maximum compatibility.\n2.  **Professional & Friendly Tone:** The email should be clear, reassuring, and reflect the status change.\n3.  **Clear Structure:** Include a header with the email title, a main message body, a brief order summary, customer details, and a footer.\n4.  **Brand Colors:** Use BazaarGo's brand colors: Primary: #F26522, Background: #F9EBE1, Text: #333333.\n5.  **Do NOT include any placeholders.** Generate the full, complete HTML.\n6.  **Currency:** The currency is Bangladeshi Taka (৳). Ensure you use the '৳' symbol before all prices.\n\n**Order Details (JSON):**\n\\`\\`\\`json\n{{{orderJson}}}\n\\`\\`\\`\n\nGenerate ONLY the HTML code for the email. Do not add any extra text or explanations before or after the HTML block.\n`,\n});\n\nconst generateStatusUpdateEmailFlow = ai.defineFlow(\n  {\n    name: 'generateStatusUpdateEmailFlow',\n    inputSchema: GenerateStatusUpdateEmailInputSchema,\n    outputSchema: z.string(),\n  },\n  async (input) => {\n    const orderJson = JSON.stringify(input.order, null, 2);\n    const statusInfo = statusUpdateMessages[input.newStatus as keyof typeof statusUpdateMessages] || {\n        subject: `Your Order Status is ${input.newStatus}`,\n        title: `Your Order Status Has Been Updated`,\n        message: `The status of your order has been updated to ${input.newStatus}.`\n    }\n\n    const { text } = await prompt({\n        newStatus: input.newStatus,\n        orderJson: orderJson,\n        subject: statusInfo.subject,\n        title: statusInfo.title,\n        message: statusInfo.message,\n    });\n    return text;\n  }\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/admin/orders/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateStatusUpdateEmail as '405fb183ab55b09fa52963c1b87ba1234d5e0a0ee7'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/orders/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/orders/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/orders/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/orders/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/admin/orders/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/admin/orders/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}